# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq ($(shell echo "test"), "test")
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

ifeq ($(origin CC), default)
  CC = clang
endif
ifeq ($(origin CXX), default)
  CXX = clang++
endif
ifeq ($(origin AR), default)
  AR = ar
endif
RESCOMP = windres
INCLUDES += -I../App-Common/Source -I../Walnut/vendor/glm -I../Walnut/Walnut/Source -I../Walnut/Walnut/Platform/Headless -I../Walnut/vendor/spdlog/include -I../Walnut/vendor/yaml-cpp/include -I../Walnut/Walnut-Modules/Walnut-Networking/Source -I../Walnut/Walnut-Modules/Walnut-Networking/vendor/GameNetworkingSockets/include -I../App-Server/Source
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
ALL_LDFLAGS += $(LDFLAGS) -L../Walnut/vendor/GameNetworkingSockets -m64
LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug)
TARGETDIR = ../bin/Debug-linux-x86_64/App-Client-Headless
TARGET = $(TARGETDIR)/App-Client-Headless
OBJDIR = ../bin-int/Debug-linux-x86_64/App-Client-Headless
DEFINES += -DYAML_CPP_STATIC_DEFINE -DWL_HEADLESS -DWL_DEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -std=c++20
LIBS += ../bin/Debug-linux-x86_64/App-Common-Headless/libApp-Common-Headless.a ../Walnut/bin/Debug-linux-x86_64/Walnut-Headless/libWalnut-Headless.a ../Walnut/bin/Debug-linux-x86_64/Walnut-Networking/libWalnut-Networking.a ../Walnut/vendor/yaml-cpp/bin/Debug-linux-x86_64/yaml-cpp/libyaml-cpp.a -lGameNetworkingSockets
LDDEPS += ../bin/Debug-linux-x86_64/App-Common-Headless/libApp-Common-Headless.a ../Walnut/bin/Debug-linux-x86_64/Walnut-Headless/libWalnut-Headless.a ../Walnut/bin/Debug-linux-x86_64/Walnut-Networking/libWalnut-Networking.a ../Walnut/vendor/yaml-cpp/bin/Debug-linux-x86_64/yaml-cpp/libyaml-cpp.a

else ifeq ($(config),release)
TARGETDIR = ../bin/Release-linux-x86_64/App-Client-Headless
TARGET = $(TARGETDIR)/App-Client-Headless
OBJDIR = ../bin-int/Release-linux-x86_64/App-Client-Headless
DEFINES += -DYAML_CPP_STATIC_DEFINE -DWL_HEADLESS -DWL_RELEASE
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -g -std=c++20
LIBS += ../bin/Release-linux-x86_64/App-Common-Headless/libApp-Common-Headless.a ../Walnut/bin/Release-linux-x86_64/Walnut-Headless/libWalnut-Headless.a ../Walnut/bin/Release-linux-x86_64/Walnut-Networking/libWalnut-Networking.a ../Walnut/vendor/yaml-cpp/bin/Release-linux-x86_64/yaml-cpp/libyaml-cpp.a -lGameNetworkingSockets
LDDEPS += ../bin/Release-linux-x86_64/App-Common-Headless/libApp-Common-Headless.a ../Walnut/bin/Release-linux-x86_64/Walnut-Headless/libWalnut-Headless.a ../Walnut/bin/Release-linux-x86_64/Walnut-Networking/libWalnut-Networking.a ../Walnut/vendor/yaml-cpp/bin/Release-linux-x86_64/yaml-cpp/libyaml-cpp.a

else ifeq ($(config),dist)
TARGETDIR = ../bin/Dist-linux-x86_64/App-Client-Headless
TARGET = $(TARGETDIR)/App-Client-Headless
OBJDIR = ../bin-int/Dist-linux-x86_64/App-Client-Headless
DEFINES += -DYAML_CPP_STATIC_DEFINE -DWL_HEADLESS -DWL_DIST
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++20
LIBS += ../bin/Dist-linux-x86_64/App-Common-Headless/libApp-Common-Headless.a ../Walnut/bin/Dist-linux-x86_64/Walnut-Headless/libWalnut-Headless.a ../Walnut/bin/Dist-linux-x86_64/Walnut-Networking/libWalnut-Networking.a ../Walnut/vendor/yaml-cpp/bin/Dist-linux-x86_64/yaml-cpp/libyaml-cpp.a -lGameNetworkingSockets
LDDEPS += ../bin/Dist-linux-x86_64/App-Common-Headless/libApp-Common-Headless.a ../Walnut/bin/Dist-linux-x86_64/Walnut-Headless/libWalnut-Headless.a ../Walnut/bin/Dist-linux-x86_64/Walnut-Networking/libWalnut-Networking.a ../Walnut/vendor/yaml-cpp/bin/Dist-linux-x86_64/yaml-cpp/libyaml-cpp.a

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/HeadlessConsole.o
GENERATED += $(OBJDIR)/ClientApp.o
GENERATED += $(OBJDIR)/ClientLayer.o
OBJECTS += $(OBJDIR)/HeadlessConsole.o
OBJECTS += $(OBJDIR)/ClientApp.o
OBJECTS += $(OBJDIR)/ClientLayer.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking App-Client-Headless
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning App-Client-Headless
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) del /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/HeadlessConsole.o: ../App-Server/Source/HeadlessConsole.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ClientApp.o: src/ClientApp.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ClientLayer.o: src/ClientLayer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif
